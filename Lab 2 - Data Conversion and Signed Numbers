;**********************************************************************************************
; Author: Kirk Shelton
; Lab 2: Data Conversion and Signed Numbers
; Date Created: February 6, 2024
; Last Modified: February 6, 2024
; Description: This program will display data conversions with the DCB numebrs.
; Inputs: values in the variable
; Outputs: on computer
; Range Xbin: 26-59

;**********************************************************************************************


                                    AREA    MyData,  DATA,  READWRITE, ALIGN=2
X                                   RN      R7
Xten                    DCB     0
Xunit                   DCB     0
Xten_ascii              DCB     0
Xunit_ascii             DCB     0
Xbin                    DCB     0
Ybin                    DCB     0

                        AREA MyCode, CODE, READONLY, ALIGN=2
                        EXPORT __main
__main



    ; Separating the two numbers into binary numbers
      MOV   X,  #0x12  ;
      MOV   R1, X ; R1 gets a copy of X
      MOV   R2, R1 ; R2 gets a copy of X
      AND   R1, #0xF; R1 has the units digit
      LDR   R0, = Xunit ; R0 <- address of Xunit
      STRB  R1, [R0] ; stores R1 in Xunit
      LSR   R2, #4 ; R2 has the tens digit
      LDR   R0, = Xten ; R0 <- address of Xten
      STRB  R2, [R0] ; stores R2 in Xten


      ; Convert into ASCII characters in memory locations
      ADD   R1, R2, #0x30   ; Convert tens digit to ASCII

      LDR   R0, = Xten_ascii ; R0 <- address of Xten_ascii
      STRB  R1, [R0]  ; get the address

      LDR   R0, = Xunit ; R0 <- address of Xunit
      LDR     R2,  [R0]   ; Load the contents
      ADD     R2, #0x30   ; Convert units to ASCII
      LDR   R0, = Xunit_ascii ; R0 <- address of Xunit_ascii
      STRB  R2, [R0] ;  Store the contents


      ; Convert binary values Xten and Xunit into a single binary number
      ; storing into an unsigned variable  Xbin
      
      
      LDR   R0, = Xten ; R0 <- address of Xten
      LDR   R2, [R0] ;   Load the contents of R2 to R0
      LSL   R3, R2, #3 ; To get 8 into R3
      LSL   R2, #1      ;  To get 2 into R2
      ADD   R2, R3   ; add r2 and r3 (8+2=10)
      LDR   R0, = Xunit ; R0 <- address of Xunit
      LDR   R3, [R0]  ;  Load the contents of R3 to R0
      ADD   R2, R3    ;  add r2 and r3
      LDR   R0, = Xbin  ; R0 <- address of Xbin
      STRB  R2, [R0] ;  Store the contents
      
      ; Find the value of Ybin one byte signed variable in terms of Xbin.
      
      MOV  R3, #50 ; make a copy of 50 in R3
      LSL  R4, R2, #1 ; To get 1 into R4
      ADD  R2, R4     ; Add 1 + 2
      SUB  R3, R2     ; Subtract 50 - 3xbin
      LDR  R0, = Ybin ; R0 <- address of Ybin
      STRB R3, [R0]   ; Store the contents
